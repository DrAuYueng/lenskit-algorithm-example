<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2011 University of Minnesota
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.grouplens.lenskit</groupId>
  <artifactId>lenskit-hello</artifactId>
  <version>1.1</version>
  <name>LensKit demo project</name>
  <description>
    This project demonstrates how to build a basic application with LensKit.
  </description>

  <properties>
    <!-- Use a property to specify the LensKit version so it's easy to upgrade
         LensKit, even if you depend on multiple modules. -->
    <lenskit.version>2.1-SNAPSHOT</lenskit.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <!-- Depend on lenskit-knn; this provides item-item and user-user CF and
         pulls in the rest of the LensKit core as dependencies. If you want
         other algorithms, e.g. SVD, depend on the relevant modules. -->
    <dependency>
      <groupId>org.grouplens.lenskit</groupId>
      <artifactId>lenskit-knn</artifactId>
      <version>${lenskit.version}</version>
    </dependency>

    <!-- emit logging messages via slf4j-simple -->
    <!-- you probably want something more sophisticated like logback or log4j for
         production use. -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.5</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Configure Java source & target versions. Putting this in pluginManagement
             makes it easier to expand to a multi-module project later. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.5.1</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>make-runnable</id>
            <goals><goal>assemble</goal></goals>
            <phase>package</phase>
            <configuration>
              <assembleDirectory>${project.build.directory}/hello</assembleDirectory>
              <programs>
                <program>
                  <name>lenskit-hello</name>
                  <mainClass>org.grouplens.lenskit.hello.HelloLenskit</mainClass>
                </program>
              </programs>
              <repositoryLayout>flat</repositoryLayout>
              <repositoryName>lib</repositoryName>
              <binFileExtensions>
                <unix>.sh</unix>
              </binFileExtensions>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
